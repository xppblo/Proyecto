<div class="col-md-4">
          <label for="regiones">Regiones</label>
          <select class="form-control" name="regiones" id="regiones" onchange="filtrarComunas(this.value)">
            <option value="">Seleccione</option> 
            {% for region in regiones %}
            <option value="{{ region.id }}">{{ region.nombre }}</option>
            {% endfor %}
          </select>
        </div>
        <div class="col-md-4">
          <label for="comunas">Comunas</label>
          <select class="form-control" name="comunas" id="comunas">
            <option value="">Seleccione</option>
          </select>
        </div>
        
        
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"
    integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
  <script src="{% static 'js/script.js' %}"></script>
  
  
JS

const filtrarComunas = async (regionId) => {
  const csrfTokenValue = document.querySelector(
    "[name=csrfmiddlewaretoken]"
  ).value;
  const headers = {
    "X-CSRFToken": csrfTokenValue,
  };

  let url = "/filtrar-comunas/"; 
  try {
    const response = await axios.post(url, { regionId }, { headers });

    //console.log(response);
    const { data, status } = response;

    if (status == 200) {
      let selectComunas = document.querySelector("#comunas");
      selectComunas.innerHTML = "";

      // Crea una opción por defecto
      const defaultOption = document.createElement("option");
      defaultOption.value = "";
      defaultOption.text = "Seleccione";
      selectComunas.appendChild(defaultOption);

      // Itera sobre la data para agregar las comunas al select
      data.data.forEach((item) => {
        const option = document.createElement("option");
        option.value = item.id;
        option.text = item.nombre;
        selectComunas.appendChild(option);
      });
    } else {
      console.log("No hay comunas disponibles");
    }
  } catch (error) {
    console.log("Error en la petición", error);
  }
};

URLS
path('filtrar-comunas/', filtrar_comunas, name='filtrar_comunas'),

VIEWS

def filtrar_comunas(request):
    try:
        if request.method == 'POST':
            data = json.loads(request.body)
            regionId = data.get('regionId')
            print('**** region id ****',regionId)
            dataBD = list(Comuna.objects.filter(
                region=regionId).values()
                )
            print('**** dataBD ****',dataBD)
            return JsonResponse({'status': 200, 'data': dataBD})
        else:
            return JsonResponse({'error': 'Método no permitido'}, status=405)
    except Exception as e:
        return JsonResponse({'error': str(e)}, status=400)


pip install django-select2

#en settings
INSTALLED_APPS = [
    # other 3rd party apps…
    'django_select2',
]

#urls.py
path("select2/", include("django_select2.urls")),

#urls.py app
    path('crear/comuna',views.crear_comuna,name='crear-comuna'),
    path("comuna/crear", views.ComunaCreateView.as_view(), name="comuna-crear"),
    

#views.py

def crear_comuna(request):
    context={
        'form': Select2Form()
    } 

    return render(request,"comuna.html",context)

class ComunaCreateView(generic.CreateView):
    model = Comuna
    form_class = ComunaForm
    template_name = 'comuna.html'
    
    
#forms.py
from django_select2 import forms as s2forms

class Select2Form(forms.Form):
    name = forms.CharField(label='Comuna', max_length=100,widget=forms.TextInput(attrs={'placeholder': 'Name', 'style': 'width: 300px;'}))  
    region = forms.ChoiceField(
        widget=s2forms.ModelSelect2Widget(
            model=Region,
            search_fields=['name__icontains'],
            attrs={'style': 'width: 300px;','class': 'form-control'}
        )
    )

class RegionWidget(s2forms.ModelSelect2Widget):
    search_fields = [
        'name__icontains',
    ]

class ComunaForm(s2forms.forms.ModelForm):
    class Meta:
        model = Comuna
        fields = ['name','region']
        widgets = {
            'region': RegionWidget,
        }
        
        
#comuna.html
{% extends 'base.html'%}
{%load static %}

{%block 'content'%}
    <h1>Crear nueva Comuna</h1>
    <form method="POST">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit" class="btn btn-info">Crear</button>
    </form>

{%endblock%}